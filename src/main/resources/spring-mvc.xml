<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
     	http://www.springframework.org/schema/aop
     	http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc
     	http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
    <!-- 注册组件扫描器 -->
    <context:component-scan base-package="com.spring"/>
    <!-- 静态资源 -->
    <mvc:default-servlet-handler />
    <!-- 启动对@AspectJ注解的支持，通知spring使用cglib而非jdk生成代理方法 AOP可拦截到Controller -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 支持注解驱动,使用fastjson自定义Http消息转换 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="FastJsonConfig" ref="fastJsonConfig"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- fastjson config -->
    <bean id="fastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
        <property name="charset" value="UTF-8"/>
        <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>
        <property name="serializerFeatures">
            <list>
                <value>WriteMapNullValue</value>
                <value>QuoteFieldNames</value>
                <value>WriteDateUseDateFormat</value>
                <!-- 禁用fastjson循环引用检测 -->
                <value>DisableCircularReferenceDetect</value>
            </list>
        </property>
    </bean>


    <!-- FreeMarker视图解析器 -->
    <bean id="viewResolverFtl" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="com.spring.common.mvc.MyFreeMarkerView"/>
        <property name="contentType" value="text/html; charset=utf-8"/>
        <property name="requestContextAttribute" value="rc"/>
        <property name="cache" value="false"/>
        <!--<property name="viewNames" value="*.html" />-->
        <property name="suffix" value=".html" />
        <property name="order" value="0"/>
    </bean>

    <!-- FreeMarker配置 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/views/"/>
        <property name="freemarkerVariables">
            <map>
                <entry key="shiro" value-ref="shiroTag"/>
            </map>
        </property>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="defaultEncoding">UTF-8</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="boolean_format">true,false</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="numberFormat">0.######</prop>
                <prop key="whitespace_stripping">true</prop>
                <prop key="template_exception_handler">rethrow</prop>
            </props>
        </property>
    </bean>

    <!-- JSP视图解析器 -->
    <bean id="viewResolverJsp" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="1"/>
    </bean>

    <!-- 文件上传，最大20M -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="2000000"/>
        <property name="defaultEncoding" value="utf-8"/>
        <property name="resolveLazily" value="true"/>
    </bean>

    <!-- Kaptcha验证码生成器 -->
    <bean name="producer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">no</prop>
                        <prop key="kaptcha.image.width">105</prop>
                        <prop key="kaptcha.image.height">40</prop>
                        <prop key="kaptcha.textproducer.font.color">204,51,51</prop>
                        <prop key="kaptcha.textproducer.font.size">33</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <prop key="kaptcha.textproducer.char.space">4</prop>
                        <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.WaterRipple</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>
    <!--开启spring缓存注解-->
    <cache:annotation-driven />
    <!-- spring cacheManager -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehCacheManager"/>
    </bean>
    <!-- spring cacheManager  -->
    <bean id="ehCacheManager"
          class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="shared" value="true"/>
        <property name="configLocation" value="classpath:ehcache.xml" />
    </bean>
    <!-- shiro cacheManager -->
    <bean id="shiroEhCacheManager"
          class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="ehCacheManager" />
    </bean>
</beans>